apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: flow-with-artifact-
spec:
  entrypoint: artifact-example
  templates:
  - name: artifact-example
    steps:
    - - name: generate-artifact
        template: artifact1
    - - name: consume-artifact
        template: print-message
        arguments:
          artifacts:
          # bind message to the hello-art artifact
          # generated by the generate-artifact step
          - name: message
            from: "{{steps.generate-artifact.outputs.artifacts.hello-art}}"

  - name: artifact1
    container:
      image: busybox
      command: ["cat","hello world", ">>", "/tmp/hello_world.txt" ]
      # While by default, the Docker and PNS workflow executors can get output artifacts from the base layer (e.g. /tmp), 
      # neither the Kubelet or the K8SAPI executors can. 
      # So if you do as the argo workflow official artifact example which output artifacts directly to /tmp, you will get an error. 
      # To avoid this, we will mount an empty dir volume for output. The original doc is here https://argoproj.github.io/argo/empty-dir/ 
      # mount the volume on /mnt/out
      volumeMounts:
        - name: out
          mountPath: /mnt/out
    # create an empty volume to output the artifacts 
    volumes:
      - name: out
        emptyDir: { }
    outputs:
      artifacts:
      # generate hello-art artifact from /tmp/hello_world.txt
      # artifacts can be directories as well as files
      - name: hello-art
        path: /mnt/out/hello_world.txt

  - name: print-message
    inputs:
      artifacts:
      # unpack the message input artifact
      # and put it at /tmp/message
      - name: message
        path: /tmp/message
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["cat /tmp/message"]