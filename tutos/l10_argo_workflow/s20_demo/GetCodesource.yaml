apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: demo-
spec:
  entrypoint: main
  # Create a pvc for the workflow
  volumeClaimTemplates:
    - metadata:
        name: workflow-code
      spec:
        accessModes: [ "ReadOnlyMany" ]
        resources:
          requests:
            storage: 100Mi
    - metadata:
        name: workflow-input
      spec:
        accessModes: [ "ReadOnlyMany" ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: workflow-tmp
      spec:
        accessModes: [ "ReadWriteMany" ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: workflow-output
        spec:
          accessModes: [ "ReadWriteMany" ]
          resources:
            requests:
              storage: 10Gi
  templates:
    - name: main
      inputs:
        artifacts:
          # Check out the master branch of the argo repo and place it at /src
          # revision can be anything that git checkout accepts: branch, commit, tag, etc.
          - name: code
            path: /mnt/bin
            git:
              repo: https://github.com/pengfei99/argoDataPipeline.git
              revision: "main"
          - name: input-data
              path: /mnt/input
              s3:
                endpoint: minio.lab.sspcloud.fr
                bucket: argo-artifacts
                key: tmp
                accessKeySecret:
                  name: prod-minio-cred
                  key: accessKey
                secretKeySecret:
                  name: prod-minio-cred
                  key: secretKey
      container:
        image: debian
        command: [sh, -c]
        args: ["ls -l /mnt/bin /mnt/input"]
        volumeMounts:
          - name: workflow-code
            mountPath: /mnt/bin
          - name: workflow-input
              mountPath: /mnt/input
