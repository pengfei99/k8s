# The workflow template definition in argo v2.7 and after are fully compatible with Workflow definitions. 
# You only need to change kind: Workflow to kind: WorkflowTemplate to convert existing Workflow to a WorkflowTemplate.
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: spark-submit-test
spec:
  # The entrypoint in the template is the default entrypoint. If the workflow which calls the template also provides an
  # entrypoint, the default one will be replaced
  entrypoint: main
  # This template has an exit handler
  onExit: exit-handler
  # Template can have default arguments, if the workflow which calls the template also provides the same
  # arguments. The default arguments will be override.
  arguments:
    parameters:
      - name: message
        value: hello world
  templates:
    - name: main
      container:
        image: inseefrlab/jupyter-datascience:master
        command: [sh, -c]
        args: ["echo $KUBERNETES_SERVICE_ACCOUNT;",
                "/opt/spark/bin/spark-submit",
                 "--master k8s://https://kubernetes.default:443",
                 "--deploy-mode cluster",
                 "--name spark-pi",
                 "--class org.apache.spark.examples.SparkPi",
                 "--conf spark.executor.instances=5",
                 "--conf spark.kubernetes.container.image=inseefrlab/jupyter-datascience:master",
                 "--conf spark.kubernetes.namespace=$KUBERNETES_NAMESPACE",
                 "--conf spark.kubernetes.authenticate.driver.serviceAccountName=$KUBERNETES_SERVICE_ACCOUNT",
                 "local:///opt/spark/examples/jars/spark-examples_2.12-3.0.1.jar"]
        imagePullPolicy: IfNotPresent
   # exit handler template
    - name: exit-handler
      container:
        image: busybox
        args: ["echo", "Exit Handler"]
        imagePullPolicy: IfNotPresent

# To submit a workflow template
# argo template create path/to/template.yaml