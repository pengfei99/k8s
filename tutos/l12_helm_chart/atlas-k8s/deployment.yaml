apiVersion: apps/v1
kind: Deployment
metadata:
  name: atlas-test-atlas
  labels:
    app: atlas
    chart: atlas-0.1.0
    release: atlas-test
    heritage: Helm
spec:
  replicas: 1
  selector:
      matchLabels:
          app: atlas
          release: atlas-test
  template:
    metadata:
      labels:
        app: atlas
        release: atlas-test
    spec:
      containers:
        - name: atlas
          command: [
                    "/bin/bash",
                    "-c",
                    "/opt/apache-atlas-2.1.0/bin/atlas_start.py;
                    "
                    ]
          image: "sburn/apache-atlas"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 21000
          volumeMounts:
          - name: atlas-config
            mountPath: /opt/apache-atlas-2.1.0/conf/atlas-application.properties
            subPath: atlas-application.properties
          - name: atlas-config
            mountPath: /opt/apache-atlas-2.1.0/conf/keycloak.json
            subPath: keycloak.json
          - name: atlas-config
            mountPath: /opt/apache-atlas-2.1.0/conf/sspcloud-authorization-policy.json
            subPath: sspcloud-authorization-policy.json
          - name: atlas-data-volume
            mountPath: /opt/apache-atlas-2.1.0/data       
          env:
            - name: MANAGE_LOCAL_HBASE
              value: "true"
            - name: MANAGE_LOCAL_SOLR
              value: "true"
      volumes:
      - name: atlas-config
        configMap:
          name: atlas-config
      - name: atlas-data-volume
        persistentVolumeClaim:
          claimName: atlas-data-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: atlas-data-claim
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 8Gi
# used to bind PV with the same class name, if you want the DefaultStorageClass create a PV dynamically, just put "".
  storageClassName: rook-ceph-block
      
